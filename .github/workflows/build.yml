name: build



on:
  workflow_dispatch:
  push:
    branches:
      - master
      - beta
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "docs/*"
  pull_request:
    branches:
      - master
      - beta
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "docs/*"
  release:
    types: [published]

jobs:
  sample-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Create sample binary archive
        shell: bash
        run: |
          tar -czvf sample-zip.tar.gz *

      - uses: actions/upload-artifact@v4
        with:
          name: sample-zip
          path: sample-zip.tar.gz
          if-no-files-found: error

  create-latest:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [sample-job]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Create binary archives
        run: |
          mv ./sample-zip/* ./sample-zip.tar.gz

      - name: Create latest build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete latest --cleanup-tag --yes || true
          
          RELEASE_BODY="## Commits"
          
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log -3 --pretty=format:"%h|%s|%an")
          else
            COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"%h|%s|%an" -n 10)
          fi
          
          while IFS='|' read -r hash subject author; do
            if [[ $subject =~ \(#([0-9]+)\)$ ]]; then
              PR_NUM="${BASH_REMATCH[1]}"
              subject=$(echo "$subject" | sed 's/ (#[0-9]\+)$//')
              PR_LINK=" [#${PR_NUM}](https://github.com/${{ github.repository }}/pull/${PR_NUM})"
            else
              PR_LINK=""
            fi
            RELEASE_BODY+=$'\n'"- $hash: $subject ($author)${PR_LINK}"
          done <<< "$COMMITS"
          
          # Create release
          gh release create latest \
            --title "Latest Build" \
            --notes "$RELEASE_BODY" \
            --target ${{ github.sha }} \
            sample-zip.tar.gz

  create-prerelease:
    if: github.event_name == 'push' && github.ref == 'refs/heads/beta'
    needs: [sample-job]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Create binary archives
        run: |
          mv ./sample-zip/* ./sample-zip.tar.gz

      - name: Create latest beta build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete latest-beta --cleanup-tag --yes || true
          
          RELEASE_BODY="## Commits"
          
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log -3 --pretty=format:"%h|%s|%an")
          else
            COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"%h|%s|%an" -n 10)
          fi
          
          while IFS='|' read -r hash subject author; do
            if [[ $subject =~ \(#([0-9]+)\)$ ]]; then
              PR_NUM="${BASH_REMATCH[1]}"
              subject=$(echo "$subject" | sed 's/ (#[0-9]\+)$//')
              PR_LINK=" [#${PR_NUM}](https://github.com/${{ github.repository }}/pull/${PR_NUM})"
            else
              PR_LINK=""
            fi
            RELEASE_BODY+=$'\n'"- $hash: $subject ($author)${PR_LINK}"
          done <<< "$COMMITS"
          
          # Create release
          gh release create latest-beta \
            --title "Beta Build" \
            --notes "$RELEASE_BODY" \
            --target ${{ github.sha }} \
            --prerelease \
            sample-zip.tar.gz

  create-release:
    if: github.event_name == 'release'
    needs: [sample-job]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - artifact_dir: sample-zip
            artifact_name: sample-zip.tar.gz
            zip: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Create archive
        run: |
          if [ "${{ matrix.zip }}" == "true" ]; then
            7z a -r ${{ matrix.artifact_name }} ./${{ matrix.artifact_dir }}/*
          else
            mv ./${{ matrix.artifact_dir }}/* ${{ matrix.artifact_name }}
          fi

      - name: Upload archives to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.event.release.tag_name }}" \
            "${{ matrix.artifact_name }}" \
            --clobber