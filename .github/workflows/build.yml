name: build

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "docs/*"
  pull_request:
    branches: [master]
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "docs/*"
  release:
    types: [published]

jobs:
  sample-job-linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request'
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Create sample binary archive
        shell: bash
        run: |
          tar -czvf sample-linux.tar.gz *

      - uses: actions/upload-artifact@v4
        with:
          name: sample-linux
          path: sample-linux.tar.gz
          if-no-files-found: error

  sample-job-msvc:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request'
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3.2

      - uses: actions/upload-artifact@v4
        with:
          name: sample-windows
          path: .
          if-no-files-found: error

  create-latest:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [sample-job-linux, sample-job-msvc]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Create binary archives
        run: |
          7z a -r sample-windows.zip ./sample-windows/*
          mv ./sample-linux/* sample-linux.tar.gz

      - name: Create latest build
        uses: softprops/action-gh-release@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          tag_name: "latest"
          prerelease: false
          title: Latest Build
          files: |
            *.zip
            *.tar.gz


  create-release:
    if: github.event_name == 'release'
    needs: [sample-job-linux, sample-job-msvc]
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        include:
          - artifact_dir: sample-windows
            artifact_name: sample-windows.zip
            zip: true

          - artifact_dir: sample-linux
            artifact_name: sample-linux.tar.gz
            zip: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Create archive
        run: |
          if [ "${{ matrix.zip }}" == "true" ]; then
            7z a -r ${{ matrix.artifact_name }} ./${{ matrix.artifact_dir }}/*
          else
            mv ./${{ matrix.artifact_dir }}/* ${{ matrix.artifact_name }}
          fi

      - name: Upload archives
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          overwrite: true
          file: ${{ matrix.artifact_name }}